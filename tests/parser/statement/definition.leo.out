---
namespace: ParseStatement
expectation: Pass
outputs:
  - Definition:
      declaration_type: Let
      variable_names:
        - mutable: true
          identifier: "{\"name\":\"x\",\"span\":\"{\\\"line_start\\\":1,\\\"line_stop\\\":1,\\\"col_start\\\":5,\\\"col_stop\\\":6,\\\"path\\\":\\\"definition.leo\\\",\\\"content\\\":\\\"let x = expr;\\\"}\"}"
          span:
            line_start: 1
            line_stop: 1
            col_start: 5
            col_stop: 6
            path: definition.leo
            content: let x = expr;
      type_: ~
      value:
        Identifier: "{\"name\":\"expr\",\"span\":\"{\\\"line_start\\\":1,\\\"line_stop\\\":1,\\\"col_start\\\":9,\\\"col_stop\\\":13,\\\"path\\\":\\\"definition.leo\\\",\\\"content\\\":\\\"let x = expr;\\\"}\"}"
      span:
        line_start: 1
        line_stop: 1
        col_start: 1
        col_stop: 13
        path: definition.leo
        content: let x = expr;
  - Definition:
      declaration_type: Let
      variable_names:
        - mutable: true
          identifier: "{\"name\":\"x\",\"span\":\"{\\\"line_start\\\":1,\\\"line_stop\\\":1,\\\"col_start\\\":5,\\\"col_stop\\\":6,\\\"path\\\":\\\"definition.leo\\\",\\\"content\\\":\\\"let x = ();\\\"}\"}"
          span:
            line_start: 1
            line_stop: 1
            col_start: 5
            col_stop: 6
            path: definition.leo
            content: let x = ();
      type_: ~
      value:
        TupleInit:
          elements: []
          span:
            line_start: 1
            line_stop: 1
            col_start: 9
            col_stop: 11
            path: definition.leo
            content: let x = ();
      span:
        line_start: 1
        line_stop: 1
        col_start: 1
        col_stop: 11
        path: definition.leo
        content: let x = ();
  - Definition:
      declaration_type: Let
      variable_names:
        - mutable: true
          identifier: "{\"name\":\"x\",\"span\":\"{\\\"line_start\\\":1,\\\"line_stop\\\":1,\\\"col_start\\\":5,\\\"col_stop\\\":6,\\\"path\\\":\\\"definition.leo\\\",\\\"content\\\":\\\"let x = x+y;\\\"}\"}"
          span:
            line_start: 1
            line_stop: 1
            col_start: 5
            col_stop: 6
            path: definition.leo
            content: let x = x+y;
      type_: ~
      value:
        Binary:
          left:
            Identifier: "{\"name\":\"x\",\"span\":\"{\\\"line_start\\\":1,\\\"line_stop\\\":1,\\\"col_start\\\":9,\\\"col_stop\\\":10,\\\"path\\\":\\\"definition.leo\\\",\\\"content\\\":\\\"let x = x+y;\\\"}\"}"
          right:
            Identifier: "{\"name\":\"y\",\"span\":\"{\\\"line_start\\\":1,\\\"line_stop\\\":1,\\\"col_start\\\":11,\\\"col_stop\\\":12,\\\"path\\\":\\\"definition.leo\\\",\\\"content\\\":\\\"let x = x+y;\\\"}\"}"
          op: Add
          span:
            line_start: 1
            line_stop: 1
            col_start: 9
            col_stop: 12
            path: definition.leo
            content: let x = x+y;
      span:
        line_start: 1
        line_stop: 1
        col_start: 1
        col_stop: 12
        path: definition.leo
        content: let x = x+y;
  - Definition:
      declaration_type: Let
      variable_names:
        - mutable: true
          identifier: "{\"name\":\"x\",\"span\":\"{\\\"line_start\\\":1,\\\"line_stop\\\":1,\\\"col_start\\\":5,\\\"col_stop\\\":6,\\\"path\\\":\\\"definition.leo\\\",\\\"content\\\":\\\"let x = (x,y);\\\"}\"}"
          span:
            line_start: 1
            line_stop: 1
            col_start: 5
            col_stop: 6
            path: definition.leo
            content: "let x = (x,y);"
      type_: ~
      value:
        TupleInit:
          elements:
            - Identifier: "{\"name\":\"x\",\"span\":\"{\\\"line_start\\\":1,\\\"line_stop\\\":1,\\\"col_start\\\":10,\\\"col_stop\\\":11,\\\"path\\\":\\\"definition.leo\\\",\\\"content\\\":\\\"let x = (x,y);\\\"}\"}"
            - Identifier: "{\"name\":\"y\",\"span\":\"{\\\"line_start\\\":1,\\\"line_stop\\\":1,\\\"col_start\\\":12,\\\"col_stop\\\":13,\\\"path\\\":\\\"definition.leo\\\",\\\"content\\\":\\\"let x = (x,y);\\\"}\"}"
          span:
            line_start: 1
            line_stop: 1
            col_start: 9
            col_stop: 14
            path: definition.leo
            content: "let x = (x,y);"
      span:
        line_start: 1
        line_stop: 1
        col_start: 1
        col_stop: 14
        path: definition.leo
        content: "let x = (x,y);"
  - Definition:
      declaration_type: Let
      variable_names:
        - mutable: true
          identifier: "{\"name\":\"x\",\"span\":\"{\\\"line_start\\\":1,\\\"line_stop\\\":1,\\\"col_start\\\":5,\\\"col_stop\\\":6,\\\"path\\\":\\\"definition.leo\\\",\\\"content\\\":\\\"let x = x();\\\"}\"}"
          span:
            line_start: 1
            line_stop: 1
            col_start: 5
            col_stop: 6
            path: definition.leo
            content: let x = x();
      type_: ~
      value:
        Call:
          function:
            Identifier: "{\"name\":\"x\",\"span\":\"{\\\"line_start\\\":1,\\\"line_stop\\\":1,\\\"col_start\\\":9,\\\"col_stop\\\":10,\\\"path\\\":\\\"definition.leo\\\",\\\"content\\\":\\\"let x = x();\\\"}\"}"
          arguments: []
          span:
            line_start: 1
            line_stop: 1
            col_start: 9
            col_stop: 12
            path: definition.leo
            content: let x = x();
      span:
        line_start: 1
        line_stop: 1
        col_start: 1
        col_stop: 12
        path: definition.leo
        content: let x = x();
  - Definition:
      declaration_type: Const
      variable_names:
        - mutable: false
          identifier: "{\"name\":\"x\",\"span\":\"{\\\"line_start\\\":1,\\\"line_stop\\\":1,\\\"col_start\\\":7,\\\"col_stop\\\":8,\\\"path\\\":\\\"definition.leo\\\",\\\"content\\\":\\\"const x = expr;\\\"}\"}"
          span:
            line_start: 1
            line_stop: 1
            col_start: 7
            col_stop: 8
            path: definition.leo
            content: const x = expr;
      type_: ~
      value:
        Identifier: "{\"name\":\"expr\",\"span\":\"{\\\"line_start\\\":1,\\\"line_stop\\\":1,\\\"col_start\\\":11,\\\"col_stop\\\":15,\\\"path\\\":\\\"definition.leo\\\",\\\"content\\\":\\\"const x = expr;\\\"}\"}"
      span:
        line_start: 1
        line_stop: 1
        col_start: 1
        col_stop: 15
        path: definition.leo
        content: const x = expr;
  - Definition:
      declaration_type: Const
      variable_names:
        - mutable: false
          identifier: "{\"name\":\"x\",\"span\":\"{\\\"line_start\\\":1,\\\"line_stop\\\":1,\\\"col_start\\\":7,\\\"col_stop\\\":8,\\\"path\\\":\\\"definition.leo\\\",\\\"content\\\":\\\"const x = ();\\\"}\"}"
          span:
            line_start: 1
            line_stop: 1
            col_start: 7
            col_stop: 8
            path: definition.leo
            content: const x = ();
      type_: ~
      value:
        TupleInit:
          elements: []
          span:
            line_start: 1
            line_stop: 1
            col_start: 11
            col_stop: 13
            path: definition.leo
            content: const x = ();
      span:
        line_start: 1
        line_stop: 1
        col_start: 1
        col_stop: 13
        path: definition.leo
        content: const x = ();
  - Definition:
      declaration_type: Const
      variable_names:
        - mutable: false
          identifier: "{\"name\":\"x\",\"span\":\"{\\\"line_start\\\":1,\\\"line_stop\\\":1,\\\"col_start\\\":7,\\\"col_stop\\\":8,\\\"path\\\":\\\"definition.leo\\\",\\\"content\\\":\\\"const x = x+y;\\\"}\"}"
          span:
            line_start: 1
            line_stop: 1
            col_start: 7
            col_stop: 8
            path: definition.leo
            content: const x = x+y;
      type_: ~
      value:
        Binary:
          left:
            Identifier: "{\"name\":\"x\",\"span\":\"{\\\"line_start\\\":1,\\\"line_stop\\\":1,\\\"col_start\\\":11,\\\"col_stop\\\":12,\\\"path\\\":\\\"definition.leo\\\",\\\"content\\\":\\\"const x = x+y;\\\"}\"}"
          right:
            Identifier: "{\"name\":\"y\",\"span\":\"{\\\"line_start\\\":1,\\\"line_stop\\\":1,\\\"col_start\\\":13,\\\"col_stop\\\":14,\\\"path\\\":\\\"definition.leo\\\",\\\"content\\\":\\\"const x = x+y;\\\"}\"}"
          op: Add
          span:
            line_start: 1
            line_stop: 1
            col_start: 11
            col_stop: 14
            path: definition.leo
            content: const x = x+y;
      span:
        line_start: 1
        line_stop: 1
        col_start: 1
        col_stop: 14
        path: definition.leo
        content: const x = x+y;
  - Definition:
      declaration_type: Const
      variable_names:
        - mutable: false
          identifier: "{\"name\":\"x\",\"span\":\"{\\\"line_start\\\":1,\\\"line_stop\\\":1,\\\"col_start\\\":7,\\\"col_stop\\\":8,\\\"path\\\":\\\"definition.leo\\\",\\\"content\\\":\\\"const x = (x,y);\\\"}\"}"
          span:
            line_start: 1
            line_stop: 1
            col_start: 7
            col_stop: 8
            path: definition.leo
            content: "const x = (x,y);"
      type_: ~
      value:
        TupleInit:
          elements:
            - Identifier: "{\"name\":\"x\",\"span\":\"{\\\"line_start\\\":1,\\\"line_stop\\\":1,\\\"col_start\\\":12,\\\"col_stop\\\":13,\\\"path\\\":\\\"definition.leo\\\",\\\"content\\\":\\\"const x = (x,y);\\\"}\"}"
            - Identifier: "{\"name\":\"y\",\"span\":\"{\\\"line_start\\\":1,\\\"line_stop\\\":1,\\\"col_start\\\":14,\\\"col_stop\\\":15,\\\"path\\\":\\\"definition.leo\\\",\\\"content\\\":\\\"const x = (x,y);\\\"}\"}"
          span:
            line_start: 1
            line_stop: 1
            col_start: 11
            col_stop: 16
            path: definition.leo
            content: "const x = (x,y);"
      span:
        line_start: 1
        line_stop: 1
        col_start: 1
        col_stop: 16
        path: definition.leo
        content: "const x = (x,y);"
  - Definition:
      declaration_type: Const
      variable_names:
        - mutable: false
          identifier: "{\"name\":\"x\",\"span\":\"{\\\"line_start\\\":1,\\\"line_stop\\\":1,\\\"col_start\\\":7,\\\"col_stop\\\":8,\\\"path\\\":\\\"definition.leo\\\",\\\"content\\\":\\\"const x = x();\\\"}\"}"
          span:
            line_start: 1
            line_stop: 1
            col_start: 7
            col_stop: 8
            path: definition.leo
            content: const x = x();
      type_: ~
      value:
        Call:
          function:
            Identifier: "{\"name\":\"x\",\"span\":\"{\\\"line_start\\\":1,\\\"line_stop\\\":1,\\\"col_start\\\":11,\\\"col_stop\\\":12,\\\"path\\\":\\\"definition.leo\\\",\\\"content\\\":\\\"const x = x();\\\"}\"}"
          arguments: []
          span:
            line_start: 1
            line_stop: 1
            col_start: 11
            col_stop: 14
            path: definition.leo
            content: const x = x();
      span:
        line_start: 1
        line_stop: 1
        col_start: 1
        col_stop: 14
        path: definition.leo
        content: const x = x();
  - Definition:
      declaration_type: Let
      variable_names:
        - mutable: true
          identifier: "{\"name\":\"x\",\"span\":\"{\\\"line_start\\\":1,\\\"line_stop\\\":1,\\\"col_start\\\":5,\\\"col_stop\\\":6,\\\"path\\\":\\\"definition.leo\\\",\\\"content\\\":\\\"let x: u32 = expr;\\\"}\"}"
          span:
            line_start: 1
            line_stop: 1
            col_start: 5
            col_stop: 6
            path: definition.leo
            content: "let x: u32 = expr;"
      type_:
        IntegerType: U32
      value:
        Identifier: "{\"name\":\"expr\",\"span\":\"{\\\"line_start\\\":1,\\\"line_stop\\\":1,\\\"col_start\\\":14,\\\"col_stop\\\":18,\\\"path\\\":\\\"definition.leo\\\",\\\"content\\\":\\\"let x: u32 = expr;\\\"}\"}"
      span:
        line_start: 1
        line_stop: 1
        col_start: 1
        col_stop: 18
        path: definition.leo
        content: "let x: u32 = expr;"
  - Definition:
      declaration_type: Let
      variable_names:
        - mutable: true
          identifier: "{\"name\":\"x\",\"span\":\"{\\\"line_start\\\":1,\\\"line_stop\\\":1,\\\"col_start\\\":5,\\\"col_stop\\\":6,\\\"path\\\":\\\"definition.leo\\\",\\\"content\\\":\\\"let x: u32 = ();\\\"}\"}"
          span:
            line_start: 1
            line_stop: 1
            col_start: 5
            col_stop: 6
            path: definition.leo
            content: "let x: u32 = ();"
      type_:
        IntegerType: U32
      value:
        TupleInit:
          elements: []
          span:
            line_start: 1
            line_stop: 1
            col_start: 14
            col_stop: 16
            path: definition.leo
            content: "let x: u32 = ();"
      span:
        line_start: 1
        line_stop: 1
        col_start: 1
        col_stop: 16
        path: definition.leo
        content: "let x: u32 = ();"
  - Definition:
      declaration_type: Let
      variable_names:
        - mutable: true
          identifier: "{\"name\":\"x\",\"span\":\"{\\\"line_start\\\":1,\\\"line_stop\\\":1,\\\"col_start\\\":5,\\\"col_stop\\\":6,\\\"path\\\":\\\"definition.leo\\\",\\\"content\\\":\\\"let x: u32 = x+y;\\\"}\"}"
          span:
            line_start: 1
            line_stop: 1
            col_start: 5
            col_stop: 6
            path: definition.leo
            content: "let x: u32 = x+y;"
      type_:
        IntegerType: U32
      value:
        Binary:
          left:
            Identifier: "{\"name\":\"x\",\"span\":\"{\\\"line_start\\\":1,\\\"line_stop\\\":1,\\\"col_start\\\":14,\\\"col_stop\\\":15,\\\"path\\\":\\\"definition.leo\\\",\\\"content\\\":\\\"let x: u32 = x+y;\\\"}\"}"
          right:
            Identifier: "{\"name\":\"y\",\"span\":\"{\\\"line_start\\\":1,\\\"line_stop\\\":1,\\\"col_start\\\":16,\\\"col_stop\\\":17,\\\"path\\\":\\\"definition.leo\\\",\\\"content\\\":\\\"let x: u32 = x+y;\\\"}\"}"
          op: Add
          span:
            line_start: 1
            line_stop: 1
            col_start: 14
            col_stop: 17
            path: definition.leo
            content: "let x: u32 = x+y;"
      span:
        line_start: 1
        line_stop: 1
        col_start: 1
        col_stop: 17
        path: definition.leo
        content: "let x: u32 = x+y;"
  - Definition:
      declaration_type: Let
      variable_names:
        - mutable: true
          identifier: "{\"name\":\"x\",\"span\":\"{\\\"line_start\\\":1,\\\"line_stop\\\":1,\\\"col_start\\\":5,\\\"col_stop\\\":6,\\\"path\\\":\\\"definition.leo\\\",\\\"content\\\":\\\"let x: u32 = (x,y);\\\"}\"}"
          span:
            line_start: 1
            line_stop: 1
            col_start: 5
            col_stop: 6
            path: definition.leo
            content: "let x: u32 = (x,y);"
      type_:
        IntegerType: U32
      value:
        TupleInit:
          elements:
            - Identifier: "{\"name\":\"x\",\"span\":\"{\\\"line_start\\\":1,\\\"line_stop\\\":1,\\\"col_start\\\":15,\\\"col_stop\\\":16,\\\"path\\\":\\\"definition.leo\\\",\\\"content\\\":\\\"let x: u32 = (x,y);\\\"}\"}"
            - Identifier: "{\"name\":\"y\",\"span\":\"{\\\"line_start\\\":1,\\\"line_stop\\\":1,\\\"col_start\\\":17,\\\"col_stop\\\":18,\\\"path\\\":\\\"definition.leo\\\",\\\"content\\\":\\\"let x: u32 = (x,y);\\\"}\"}"
          span:
            line_start: 1
            line_stop: 1
            col_start: 14
            col_stop: 19
            path: definition.leo
            content: "let x: u32 = (x,y);"
      span:
        line_start: 1
        line_stop: 1
        col_start: 1
        col_stop: 19
        path: definition.leo
        content: "let x: u32 = (x,y);"
  - Definition:
      declaration_type: Let
      variable_names:
        - mutable: true
          identifier: "{\"name\":\"x\",\"span\":\"{\\\"line_start\\\":1,\\\"line_stop\\\":1,\\\"col_start\\\":5,\\\"col_stop\\\":6,\\\"path\\\":\\\"definition.leo\\\",\\\"content\\\":\\\"let x: u32 = x();\\\"}\"}"
          span:
            line_start: 1
            line_stop: 1
            col_start: 5
            col_stop: 6
            path: definition.leo
            content: "let x: u32 = x();"
      type_:
        IntegerType: U32
      value:
        Call:
          function:
            Identifier: "{\"name\":\"x\",\"span\":\"{\\\"line_start\\\":1,\\\"line_stop\\\":1,\\\"col_start\\\":14,\\\"col_stop\\\":15,\\\"path\\\":\\\"definition.leo\\\",\\\"content\\\":\\\"let x: u32 = x();\\\"}\"}"
          arguments: []
          span:
            line_start: 1
            line_stop: 1
            col_start: 14
            col_stop: 17
            path: definition.leo
            content: "let x: u32 = x();"
      span:
        line_start: 1
        line_stop: 1
        col_start: 1
        col_stop: 17
        path: definition.leo
        content: "let x: u32 = x();"
  - Definition:
      declaration_type: Const
      variable_names:
        - mutable: false
          identifier: "{\"name\":\"x\",\"span\":\"{\\\"line_start\\\":1,\\\"line_stop\\\":1,\\\"col_start\\\":7,\\\"col_stop\\\":8,\\\"path\\\":\\\"definition.leo\\\",\\\"content\\\":\\\"const x: u32 = expr;\\\"}\"}"
          span:
            line_start: 1
            line_stop: 1
            col_start: 7
            col_stop: 8
            path: definition.leo
            content: "const x: u32 = expr;"
      type_:
        IntegerType: U32
      value:
        Identifier: "{\"name\":\"expr\",\"span\":\"{\\\"line_start\\\":1,\\\"line_stop\\\":1,\\\"col_start\\\":16,\\\"col_stop\\\":20,\\\"path\\\":\\\"definition.leo\\\",\\\"content\\\":\\\"const x: u32 = expr;\\\"}\"}"
      span:
        line_start: 1
        line_stop: 1
        col_start: 1
        col_stop: 20
        path: definition.leo
        content: "const x: u32 = expr;"
  - Definition:
      declaration_type: Const
      variable_names:
        - mutable: false
          identifier: "{\"name\":\"x\",\"span\":\"{\\\"line_start\\\":1,\\\"line_stop\\\":1,\\\"col_start\\\":7,\\\"col_stop\\\":8,\\\"path\\\":\\\"definition.leo\\\",\\\"content\\\":\\\"const x: u32 = ();\\\"}\"}"
          span:
            line_start: 1
            line_stop: 1
            col_start: 7
            col_stop: 8
            path: definition.leo
            content: "const x: u32 = ();"
      type_:
        IntegerType: U32
      value:
        TupleInit:
          elements: []
          span:
            line_start: 1
            line_stop: 1
            col_start: 16
            col_stop: 18
            path: definition.leo
            content: "const x: u32 = ();"
      span:
        line_start: 1
        line_stop: 1
        col_start: 1
        col_stop: 18
        path: definition.leo
        content: "const x: u32 = ();"
  - Definition:
      declaration_type: Const
      variable_names:
        - mutable: false
          identifier: "{\"name\":\"x\",\"span\":\"{\\\"line_start\\\":1,\\\"line_stop\\\":1,\\\"col_start\\\":7,\\\"col_stop\\\":8,\\\"path\\\":\\\"definition.leo\\\",\\\"content\\\":\\\"const x: u32 = x+y;\\\"}\"}"
          span:
            line_start: 1
            line_stop: 1
            col_start: 7
            col_stop: 8
            path: definition.leo
            content: "const x: u32 = x+y;"
      type_:
        IntegerType: U32
      value:
        Binary:
          left:
            Identifier: "{\"name\":\"x\",\"span\":\"{\\\"line_start\\\":1,\\\"line_stop\\\":1,\\\"col_start\\\":16,\\\"col_stop\\\":17,\\\"path\\\":\\\"definition.leo\\\",\\\"content\\\":\\\"const x: u32 = x+y;\\\"}\"}"
          right:
            Identifier: "{\"name\":\"y\",\"span\":\"{\\\"line_start\\\":1,\\\"line_stop\\\":1,\\\"col_start\\\":18,\\\"col_stop\\\":19,\\\"path\\\":\\\"definition.leo\\\",\\\"content\\\":\\\"const x: u32 = x+y;\\\"}\"}"
          op: Add
          span:
            line_start: 1
            line_stop: 1
            col_start: 16
            col_stop: 19
            path: definition.leo
            content: "const x: u32 = x+y;"
      span:
        line_start: 1
        line_stop: 1
        col_start: 1
        col_stop: 19
        path: definition.leo
        content: "const x: u32 = x+y;"
  - Definition:
      declaration_type: Const
      variable_names:
        - mutable: false
          identifier: "{\"name\":\"x\",\"span\":\"{\\\"line_start\\\":1,\\\"line_stop\\\":1,\\\"col_start\\\":7,\\\"col_stop\\\":8,\\\"path\\\":\\\"definition.leo\\\",\\\"content\\\":\\\"const x: u32 = (x,y);\\\"}\"}"
          span:
            line_start: 1
            line_stop: 1
            col_start: 7
            col_stop: 8
            path: definition.leo
            content: "const x: u32 = (x,y);"
      type_:
        IntegerType: U32
      value:
        TupleInit:
          elements:
            - Identifier: "{\"name\":\"x\",\"span\":\"{\\\"line_start\\\":1,\\\"line_stop\\\":1,\\\"col_start\\\":17,\\\"col_stop\\\":18,\\\"path\\\":\\\"definition.leo\\\",\\\"content\\\":\\\"const x: u32 = (x,y);\\\"}\"}"
            - Identifier: "{\"name\":\"y\",\"span\":\"{\\\"line_start\\\":1,\\\"line_stop\\\":1,\\\"col_start\\\":19,\\\"col_stop\\\":20,\\\"path\\\":\\\"definition.leo\\\",\\\"content\\\":\\\"const x: u32 = (x,y);\\\"}\"}"
          span:
            line_start: 1
            line_stop: 1
            col_start: 16
            col_stop: 21
            path: definition.leo
            content: "const x: u32 = (x,y);"
      span:
        line_start: 1
        line_stop: 1
        col_start: 1
        col_stop: 21
        path: definition.leo
        content: "const x: u32 = (x,y);"
  - Definition:
      declaration_type: Const
      variable_names:
        - mutable: false
          identifier: "{\"name\":\"x\",\"span\":\"{\\\"line_start\\\":1,\\\"line_stop\\\":1,\\\"col_start\\\":7,\\\"col_stop\\\":8,\\\"path\\\":\\\"definition.leo\\\",\\\"content\\\":\\\"const x: u32 = x();\\\"}\"}"
          span:
            line_start: 1
            line_stop: 1
            col_start: 7
            col_stop: 8
            path: definition.leo
            content: "const x: u32 = x();"
      type_:
        IntegerType: U32
      value:
        Call:
          function:
            Identifier: "{\"name\":\"x\",\"span\":\"{\\\"line_start\\\":1,\\\"line_stop\\\":1,\\\"col_start\\\":16,\\\"col_stop\\\":17,\\\"path\\\":\\\"definition.leo\\\",\\\"content\\\":\\\"const x: u32 = x();\\\"}\"}"
          arguments: []
          span:
            line_start: 1
            line_stop: 1
            col_start: 16
            col_stop: 19
            path: definition.leo
            content: "const x: u32 = x();"
      span:
        line_start: 1
        line_stop: 1
        col_start: 1
        col_stop: 19
        path: definition.leo
        content: "const x: u32 = x();"
  - Definition:
      declaration_type: Let
      variable_names:
        - mutable: true
          identifier: "{\"name\":\"x\",\"span\":\"{\\\"line_start\\\":1,\\\"line_stop\\\":1,\\\"col_start\\\":6,\\\"col_stop\\\":7,\\\"path\\\":\\\"definition.leo\\\",\\\"content\\\":\\\"let (x, y) = expr;\\\"}\"}"
          span:
            line_start: 1
            line_stop: 1
            col_start: 6
            col_stop: 7
            path: definition.leo
            content: "let (x, y) = expr;"
        - mutable: true
          identifier: "{\"name\":\"y\",\"span\":\"{\\\"line_start\\\":1,\\\"line_stop\\\":1,\\\"col_start\\\":9,\\\"col_stop\\\":10,\\\"path\\\":\\\"definition.leo\\\",\\\"content\\\":\\\"let (x, y) = expr;\\\"}\"}"
          span:
            line_start: 1
            line_stop: 1
            col_start: 9
            col_stop: 10
            path: definition.leo
            content: "let (x, y) = expr;"
      type_: ~
      value:
        Identifier: "{\"name\":\"expr\",\"span\":\"{\\\"line_start\\\":1,\\\"line_stop\\\":1,\\\"col_start\\\":14,\\\"col_stop\\\":18,\\\"path\\\":\\\"definition.leo\\\",\\\"content\\\":\\\"let (x, y) = expr;\\\"}\"}"
      span:
        line_start: 1
        line_stop: 1
        col_start: 1
        col_stop: 18
        path: definition.leo
        content: "let (x, y) = expr;"
  - Definition:
      declaration_type: Let
      variable_names:
        - mutable: true
          identifier: "{\"name\":\"x\",\"span\":\"{\\\"line_start\\\":1,\\\"line_stop\\\":1,\\\"col_start\\\":6,\\\"col_stop\\\":7,\\\"path\\\":\\\"definition.leo\\\",\\\"content\\\":\\\"let (x, y) = ();\\\"}\"}"
          span:
            line_start: 1
            line_stop: 1
            col_start: 6
            col_stop: 7
            path: definition.leo
            content: "let (x, y) = ();"
        - mutable: true
          identifier: "{\"name\":\"y\",\"span\":\"{\\\"line_start\\\":1,\\\"line_stop\\\":1,\\\"col_start\\\":9,\\\"col_stop\\\":10,\\\"path\\\":\\\"definition.leo\\\",\\\"content\\\":\\\"let (x, y) = ();\\\"}\"}"
          span:
            line_start: 1
            line_stop: 1
            col_start: 9
            col_stop: 10
            path: definition.leo
            content: "let (x, y) = ();"
      type_: ~
      value:
        TupleInit:
          elements: []
          span:
            line_start: 1
            line_stop: 1
            col_start: 14
            col_stop: 16
            path: definition.leo
            content: "let (x, y) = ();"
      span:
        line_start: 1
        line_stop: 1
        col_start: 1
        col_stop: 16
        path: definition.leo
        content: "let (x, y) = ();"
  - Definition:
      declaration_type: Let
      variable_names:
        - mutable: true
          identifier: "{\"name\":\"x\",\"span\":\"{\\\"line_start\\\":1,\\\"line_stop\\\":1,\\\"col_start\\\":6,\\\"col_stop\\\":7,\\\"path\\\":\\\"definition.leo\\\",\\\"content\\\":\\\"let (x, y) = x+y;\\\"}\"}"
          span:
            line_start: 1
            line_stop: 1
            col_start: 6
            col_stop: 7
            path: definition.leo
            content: "let (x, y) = x+y;"
        - mutable: true
          identifier: "{\"name\":\"y\",\"span\":\"{\\\"line_start\\\":1,\\\"line_stop\\\":1,\\\"col_start\\\":9,\\\"col_stop\\\":10,\\\"path\\\":\\\"definition.leo\\\",\\\"content\\\":\\\"let (x, y) = x+y;\\\"}\"}"
          span:
            line_start: 1
            line_stop: 1
            col_start: 9
            col_stop: 10
            path: definition.leo
            content: "let (x, y) = x+y;"
      type_: ~
      value:
        Binary:
          left:
            Identifier: "{\"name\":\"x\",\"span\":\"{\\\"line_start\\\":1,\\\"line_stop\\\":1,\\\"col_start\\\":14,\\\"col_stop\\\":15,\\\"path\\\":\\\"definition.leo\\\",\\\"content\\\":\\\"let (x, y) = x+y;\\\"}\"}"
          right:
            Identifier: "{\"name\":\"y\",\"span\":\"{\\\"line_start\\\":1,\\\"line_stop\\\":1,\\\"col_start\\\":16,\\\"col_stop\\\":17,\\\"path\\\":\\\"definition.leo\\\",\\\"content\\\":\\\"let (x, y) = x+y;\\\"}\"}"
          op: Add
          span:
            line_start: 1
            line_stop: 1
            col_start: 14
            col_stop: 17
            path: definition.leo
            content: "let (x, y) = x+y;"
      span:
        line_start: 1
        line_stop: 1
        col_start: 1
        col_stop: 17
        path: definition.leo
        content: "let (x, y) = x+y;"
  - Definition:
      declaration_type: Let
      variable_names:
        - mutable: true
          identifier: "{\"name\":\"x\",\"span\":\"{\\\"line_start\\\":1,\\\"line_stop\\\":1,\\\"col_start\\\":6,\\\"col_stop\\\":7,\\\"path\\\":\\\"definition.leo\\\",\\\"content\\\":\\\"let (x, y) = (x,y);\\\"}\"}"
          span:
            line_start: 1
            line_stop: 1
            col_start: 6
            col_stop: 7
            path: definition.leo
            content: "let (x, y) = (x,y);"
        - mutable: true
          identifier: "{\"name\":\"y\",\"span\":\"{\\\"line_start\\\":1,\\\"line_stop\\\":1,\\\"col_start\\\":9,\\\"col_stop\\\":10,\\\"path\\\":\\\"definition.leo\\\",\\\"content\\\":\\\"let (x, y) = (x,y);\\\"}\"}"
          span:
            line_start: 1
            line_stop: 1
            col_start: 9
            col_stop: 10
            path: definition.leo
            content: "let (x, y) = (x,y);"
      type_: ~
      value:
        TupleInit:
          elements:
            - Identifier: "{\"name\":\"x\",\"span\":\"{\\\"line_start\\\":1,\\\"line_stop\\\":1,\\\"col_start\\\":15,\\\"col_stop\\\":16,\\\"path\\\":\\\"definition.leo\\\",\\\"content\\\":\\\"let (x, y) = (x,y);\\\"}\"}"
            - Identifier: "{\"name\":\"y\",\"span\":\"{\\\"line_start\\\":1,\\\"line_stop\\\":1,\\\"col_start\\\":17,\\\"col_stop\\\":18,\\\"path\\\":\\\"definition.leo\\\",\\\"content\\\":\\\"let (x, y) = (x,y);\\\"}\"}"
          span:
            line_start: 1
            line_stop: 1
            col_start: 14
            col_stop: 19
            path: definition.leo
            content: "let (x, y) = (x,y);"
      span:
        line_start: 1
        line_stop: 1
        col_start: 1
        col_stop: 19
        path: definition.leo
        content: "let (x, y) = (x,y);"
  - Definition:
      declaration_type: Let
      variable_names:
        - mutable: true
          identifier: "{\"name\":\"x\",\"span\":\"{\\\"line_start\\\":1,\\\"line_stop\\\":1,\\\"col_start\\\":6,\\\"col_stop\\\":7,\\\"path\\\":\\\"definition.leo\\\",\\\"content\\\":\\\"let (x, y) = x();\\\"}\"}"
          span:
            line_start: 1
            line_stop: 1
            col_start: 6
            col_stop: 7
            path: definition.leo
            content: "let (x, y) = x();"
        - mutable: true
          identifier: "{\"name\":\"y\",\"span\":\"{\\\"line_start\\\":1,\\\"line_stop\\\":1,\\\"col_start\\\":9,\\\"col_stop\\\":10,\\\"path\\\":\\\"definition.leo\\\",\\\"content\\\":\\\"let (x, y) = x();\\\"}\"}"
          span:
            line_start: 1
            line_stop: 1
            col_start: 9
            col_stop: 10
            path: definition.leo
            content: "let (x, y) = x();"
      type_: ~
      value:
        Call:
          function:
            Identifier: "{\"name\":\"x\",\"span\":\"{\\\"line_start\\\":1,\\\"line_stop\\\":1,\\\"col_start\\\":14,\\\"col_stop\\\":15,\\\"path\\\":\\\"definition.leo\\\",\\\"content\\\":\\\"let (x, y) = x();\\\"}\"}"
          arguments: []
          span:
            line_start: 1
            line_stop: 1
            col_start: 14
            col_stop: 17
            path: definition.leo
            content: "let (x, y) = x();"
      span:
        line_start: 1
        line_stop: 1
        col_start: 1
        col_stop: 17
        path: definition.leo
        content: "let (x, y) = x();"
  - Definition:
      declaration_type: Const
      variable_names:
        - mutable: false
          identifier: "{\"name\":\"x\",\"span\":\"{\\\"line_start\\\":1,\\\"line_stop\\\":1,\\\"col_start\\\":8,\\\"col_stop\\\":9,\\\"path\\\":\\\"definition.leo\\\",\\\"content\\\":\\\"const (x, y) = expr;\\\"}\"}"
          span:
            line_start: 1
            line_stop: 1
            col_start: 8
            col_stop: 9
            path: definition.leo
            content: "const (x, y) = expr;"
        - mutable: false
          identifier: "{\"name\":\"y\",\"span\":\"{\\\"line_start\\\":1,\\\"line_stop\\\":1,\\\"col_start\\\":11,\\\"col_stop\\\":12,\\\"path\\\":\\\"definition.leo\\\",\\\"content\\\":\\\"const (x, y) = expr;\\\"}\"}"
          span:
            line_start: 1
            line_stop: 1
            col_start: 11
            col_stop: 12
            path: definition.leo
            content: "const (x, y) = expr;"
      type_: ~
      value:
        Identifier: "{\"name\":\"expr\",\"span\":\"{\\\"line_start\\\":1,\\\"line_stop\\\":1,\\\"col_start\\\":16,\\\"col_stop\\\":20,\\\"path\\\":\\\"definition.leo\\\",\\\"content\\\":\\\"const (x, y) = expr;\\\"}\"}"
      span:
        line_start: 1
        line_stop: 1
        col_start: 1
        col_stop: 20
        path: definition.leo
        content: "const (x, y) = expr;"
  - Definition:
      declaration_type: Const
      variable_names:
        - mutable: false
          identifier: "{\"name\":\"x\",\"span\":\"{\\\"line_start\\\":1,\\\"line_stop\\\":1,\\\"col_start\\\":8,\\\"col_stop\\\":9,\\\"path\\\":\\\"definition.leo\\\",\\\"content\\\":\\\"const (x, y) = ();\\\"}\"}"
          span:
            line_start: 1
            line_stop: 1
            col_start: 8
            col_stop: 9
            path: definition.leo
            content: "const (x, y) = ();"
        - mutable: false
          identifier: "{\"name\":\"y\",\"span\":\"{\\\"line_start\\\":1,\\\"line_stop\\\":1,\\\"col_start\\\":11,\\\"col_stop\\\":12,\\\"path\\\":\\\"definition.leo\\\",\\\"content\\\":\\\"const (x, y) = ();\\\"}\"}"
          span:
            line_start: 1
            line_stop: 1
            col_start: 11
            col_stop: 12
            path: definition.leo
            content: "const (x, y) = ();"
      type_: ~
      value:
        TupleInit:
          elements: []
          span:
            line_start: 1
            line_stop: 1
            col_start: 16
            col_stop: 18
            path: definition.leo
            content: "const (x, y) = ();"
      span:
        line_start: 1
        line_stop: 1
        col_start: 1
        col_stop: 18
        path: definition.leo
        content: "const (x, y) = ();"
  - Definition:
      declaration_type: Const
      variable_names:
        - mutable: false
          identifier: "{\"name\":\"x\",\"span\":\"{\\\"line_start\\\":1,\\\"line_stop\\\":1,\\\"col_start\\\":8,\\\"col_stop\\\":9,\\\"path\\\":\\\"definition.leo\\\",\\\"content\\\":\\\"const (x, y) = x+y;\\\"}\"}"
          span:
            line_start: 1
            line_stop: 1
            col_start: 8
            col_stop: 9
            path: definition.leo
            content: "const (x, y) = x+y;"
        - mutable: false
          identifier: "{\"name\":\"y\",\"span\":\"{\\\"line_start\\\":1,\\\"line_stop\\\":1,\\\"col_start\\\":11,\\\"col_stop\\\":12,\\\"path\\\":\\\"definition.leo\\\",\\\"content\\\":\\\"const (x, y) = x+y;\\\"}\"}"
          span:
            line_start: 1
            line_stop: 1
            col_start: 11
            col_stop: 12
            path: definition.leo
            content: "const (x, y) = x+y;"
      type_: ~
      value:
        Binary:
          left:
            Identifier: "{\"name\":\"x\",\"span\":\"{\\\"line_start\\\":1,\\\"line_stop\\\":1,\\\"col_start\\\":16,\\\"col_stop\\\":17,\\\"path\\\":\\\"definition.leo\\\",\\\"content\\\":\\\"const (x, y) = x+y;\\\"}\"}"
          right:
            Identifier: "{\"name\":\"y\",\"span\":\"{\\\"line_start\\\":1,\\\"line_stop\\\":1,\\\"col_start\\\":18,\\\"col_stop\\\":19,\\\"path\\\":\\\"definition.leo\\\",\\\"content\\\":\\\"const (x, y) = x+y;\\\"}\"}"
          op: Add
          span:
            line_start: 1
            line_stop: 1
            col_start: 16
            col_stop: 19
            path: definition.leo
            content: "const (x, y) = x+y;"
      span:
        line_start: 1
        line_stop: 1
        col_start: 1
        col_stop: 19
        path: definition.leo
        content: "const (x, y) = x+y;"
  - Definition:
      declaration_type: Const
      variable_names:
        - mutable: false
          identifier: "{\"name\":\"x\",\"span\":\"{\\\"line_start\\\":1,\\\"line_stop\\\":1,\\\"col_start\\\":8,\\\"col_stop\\\":9,\\\"path\\\":\\\"definition.leo\\\",\\\"content\\\":\\\"const (x, y) = (x,y);\\\"}\"}"
          span:
            line_start: 1
            line_stop: 1
            col_start: 8
            col_stop: 9
            path: definition.leo
            content: "const (x, y) = (x,y);"
        - mutable: false
          identifier: "{\"name\":\"y\",\"span\":\"{\\\"line_start\\\":1,\\\"line_stop\\\":1,\\\"col_start\\\":11,\\\"col_stop\\\":12,\\\"path\\\":\\\"definition.leo\\\",\\\"content\\\":\\\"const (x, y) = (x,y);\\\"}\"}"
          span:
            line_start: 1
            line_stop: 1
            col_start: 11
            col_stop: 12
            path: definition.leo
            content: "const (x, y) = (x,y);"
      type_: ~
      value:
        TupleInit:
          elements:
            - Identifier: "{\"name\":\"x\",\"span\":\"{\\\"line_start\\\":1,\\\"line_stop\\\":1,\\\"col_start\\\":17,\\\"col_stop\\\":18,\\\"path\\\":\\\"definition.leo\\\",\\\"content\\\":\\\"const (x, y) = (x,y);\\\"}\"}"
            - Identifier: "{\"name\":\"y\",\"span\":\"{\\\"line_start\\\":1,\\\"line_stop\\\":1,\\\"col_start\\\":19,\\\"col_stop\\\":20,\\\"path\\\":\\\"definition.leo\\\",\\\"content\\\":\\\"const (x, y) = (x,y);\\\"}\"}"
          span:
            line_start: 1
            line_stop: 1
            col_start: 16
            col_stop: 21
            path: definition.leo
            content: "const (x, y) = (x,y);"
      span:
        line_start: 1
        line_stop: 1
        col_start: 1
        col_stop: 21
        path: definition.leo
        content: "const (x, y) = (x,y);"
  - Definition:
      declaration_type: Const
      variable_names:
        - mutable: false
          identifier: "{\"name\":\"x\",\"span\":\"{\\\"line_start\\\":1,\\\"line_stop\\\":1,\\\"col_start\\\":8,\\\"col_stop\\\":9,\\\"path\\\":\\\"definition.leo\\\",\\\"content\\\":\\\"const (x, y) = x();\\\"}\"}"
          span:
            line_start: 1
            line_stop: 1
            col_start: 8
            col_stop: 9
            path: definition.leo
            content: "const (x, y) = x();"
        - mutable: false
          identifier: "{\"name\":\"y\",\"span\":\"{\\\"line_start\\\":1,\\\"line_stop\\\":1,\\\"col_start\\\":11,\\\"col_stop\\\":12,\\\"path\\\":\\\"definition.leo\\\",\\\"content\\\":\\\"const (x, y) = x();\\\"}\"}"
          span:
            line_start: 1
            line_stop: 1
            col_start: 11
            col_stop: 12
            path: definition.leo
            content: "const (x, y) = x();"
      type_: ~
      value:
        Call:
          function:
            Identifier: "{\"name\":\"x\",\"span\":\"{\\\"line_start\\\":1,\\\"line_stop\\\":1,\\\"col_start\\\":16,\\\"col_stop\\\":17,\\\"path\\\":\\\"definition.leo\\\",\\\"content\\\":\\\"const (x, y) = x();\\\"}\"}"
          arguments: []
          span:
            line_start: 1
            line_stop: 1
            col_start: 16
            col_stop: 19
            path: definition.leo
            content: "const (x, y) = x();"
      span:
        line_start: 1
        line_stop: 1
        col_start: 1
        col_stop: 19
        path: definition.leo
        content: "const (x, y) = x();"
  - Definition:
      declaration_type: Let
      variable_names:
        - mutable: true
          identifier: "{\"name\":\"x\",\"span\":\"{\\\"line_start\\\":1,\\\"line_stop\\\":1,\\\"col_start\\\":6,\\\"col_stop\\\":7,\\\"path\\\":\\\"definition.leo\\\",\\\"content\\\":\\\"let (x, y): u32 = expr;\\\"}\"}"
          span:
            line_start: 1
            line_stop: 1
            col_start: 6
            col_stop: 7
            path: definition.leo
            content: "let (x, y): u32 = expr;"
        - mutable: true
          identifier: "{\"name\":\"y\",\"span\":\"{\\\"line_start\\\":1,\\\"line_stop\\\":1,\\\"col_start\\\":9,\\\"col_stop\\\":10,\\\"path\\\":\\\"definition.leo\\\",\\\"content\\\":\\\"let (x, y): u32 = expr;\\\"}\"}"
          span:
            line_start: 1
            line_stop: 1
            col_start: 9
            col_stop: 10
            path: definition.leo
            content: "let (x, y): u32 = expr;"
      type_:
        IntegerType: U32
      value:
        Identifier: "{\"name\":\"expr\",\"span\":\"{\\\"line_start\\\":1,\\\"line_stop\\\":1,\\\"col_start\\\":19,\\\"col_stop\\\":23,\\\"path\\\":\\\"definition.leo\\\",\\\"content\\\":\\\"let (x, y): u32 = expr;\\\"}\"}"
      span:
        line_start: 1
        line_stop: 1
        col_start: 1
        col_stop: 23
        path: definition.leo
        content: "let (x, y): u32 = expr;"
  - Definition:
      declaration_type: Let
      variable_names:
        - mutable: true
          identifier: "{\"name\":\"x\",\"span\":\"{\\\"line_start\\\":1,\\\"line_stop\\\":1,\\\"col_start\\\":6,\\\"col_stop\\\":7,\\\"path\\\":\\\"definition.leo\\\",\\\"content\\\":\\\"let (x, y): u32 = ();\\\"}\"}"
          span:
            line_start: 1
            line_stop: 1
            col_start: 6
            col_stop: 7
            path: definition.leo
            content: "let (x, y): u32 = ();"
        - mutable: true
          identifier: "{\"name\":\"y\",\"span\":\"{\\\"line_start\\\":1,\\\"line_stop\\\":1,\\\"col_start\\\":9,\\\"col_stop\\\":10,\\\"path\\\":\\\"definition.leo\\\",\\\"content\\\":\\\"let (x, y): u32 = ();\\\"}\"}"
          span:
            line_start: 1
            line_stop: 1
            col_start: 9
            col_stop: 10
            path: definition.leo
            content: "let (x, y): u32 = ();"
      type_:
        IntegerType: U32
      value:
        TupleInit:
          elements: []
          span:
            line_start: 1
            line_stop: 1
            col_start: 19
            col_stop: 21
            path: definition.leo
            content: "let (x, y): u32 = ();"
      span:
        line_start: 1
        line_stop: 1
        col_start: 1
        col_stop: 21
        path: definition.leo
        content: "let (x, y): u32 = ();"
  - Definition:
      declaration_type: Let
      variable_names:
        - mutable: true
          identifier: "{\"name\":\"x\",\"span\":\"{\\\"line_start\\\":1,\\\"line_stop\\\":1,\\\"col_start\\\":6,\\\"col_stop\\\":7,\\\"path\\\":\\\"definition.leo\\\",\\\"content\\\":\\\"let (x, y): u32 = x+y;\\\"}\"}"
          span:
            line_start: 1
            line_stop: 1
            col_start: 6
            col_stop: 7
            path: definition.leo
            content: "let (x, y): u32 = x+y;"
        - mutable: true
          identifier: "{\"name\":\"y\",\"span\":\"{\\\"line_start\\\":1,\\\"line_stop\\\":1,\\\"col_start\\\":9,\\\"col_stop\\\":10,\\\"path\\\":\\\"definition.leo\\\",\\\"content\\\":\\\"let (x, y): u32 = x+y;\\\"}\"}"
          span:
            line_start: 1
            line_stop: 1
            col_start: 9
            col_stop: 10
            path: definition.leo
            content: "let (x, y): u32 = x+y;"
      type_:
        IntegerType: U32
      value:
        Binary:
          left:
            Identifier: "{\"name\":\"x\",\"span\":\"{\\\"line_start\\\":1,\\\"line_stop\\\":1,\\\"col_start\\\":19,\\\"col_stop\\\":20,\\\"path\\\":\\\"definition.leo\\\",\\\"content\\\":\\\"let (x, y): u32 = x+y;\\\"}\"}"
          right:
            Identifier: "{\"name\":\"y\",\"span\":\"{\\\"line_start\\\":1,\\\"line_stop\\\":1,\\\"col_start\\\":21,\\\"col_stop\\\":22,\\\"path\\\":\\\"definition.leo\\\",\\\"content\\\":\\\"let (x, y): u32 = x+y;\\\"}\"}"
          op: Add
          span:
            line_start: 1
            line_stop: 1
            col_start: 19
            col_stop: 22
            path: definition.leo
            content: "let (x, y): u32 = x+y;"
      span:
        line_start: 1
        line_stop: 1
        col_start: 1
        col_stop: 22
        path: definition.leo
        content: "let (x, y): u32 = x+y;"
  - Definition:
      declaration_type: Let
      variable_names:
        - mutable: true
          identifier: "{\"name\":\"x\",\"span\":\"{\\\"line_start\\\":1,\\\"line_stop\\\":1,\\\"col_start\\\":6,\\\"col_stop\\\":7,\\\"path\\\":\\\"definition.leo\\\",\\\"content\\\":\\\"let (x, y): u32 = (x,y);\\\"}\"}"
          span:
            line_start: 1
            line_stop: 1
            col_start: 6
            col_stop: 7
            path: definition.leo
            content: "let (x, y): u32 = (x,y);"
        - mutable: true
          identifier: "{\"name\":\"y\",\"span\":\"{\\\"line_start\\\":1,\\\"line_stop\\\":1,\\\"col_start\\\":9,\\\"col_stop\\\":10,\\\"path\\\":\\\"definition.leo\\\",\\\"content\\\":\\\"let (x, y): u32 = (x,y);\\\"}\"}"
          span:
            line_start: 1
            line_stop: 1
            col_start: 9
            col_stop: 10
            path: definition.leo
            content: "let (x, y): u32 = (x,y);"
      type_:
        IntegerType: U32
      value:
        TupleInit:
          elements:
            - Identifier: "{\"name\":\"x\",\"span\":\"{\\\"line_start\\\":1,\\\"line_stop\\\":1,\\\"col_start\\\":20,\\\"col_stop\\\":21,\\\"path\\\":\\\"definition.leo\\\",\\\"content\\\":\\\"let (x, y): u32 = (x,y);\\\"}\"}"
            - Identifier: "{\"name\":\"y\",\"span\":\"{\\\"line_start\\\":1,\\\"line_stop\\\":1,\\\"col_start\\\":22,\\\"col_stop\\\":23,\\\"path\\\":\\\"definition.leo\\\",\\\"content\\\":\\\"let (x, y): u32 = (x,y);\\\"}\"}"
          span:
            line_start: 1
            line_stop: 1
            col_start: 19
            col_stop: 24
            path: definition.leo
            content: "let (x, y): u32 = (x,y);"
      span:
        line_start: 1
        line_stop: 1
        col_start: 1
        col_stop: 24
        path: definition.leo
        content: "let (x, y): u32 = (x,y);"
  - Definition:
      declaration_type: Let
      variable_names:
        - mutable: true
          identifier: "{\"name\":\"x\",\"span\":\"{\\\"line_start\\\":1,\\\"line_stop\\\":1,\\\"col_start\\\":6,\\\"col_stop\\\":7,\\\"path\\\":\\\"definition.leo\\\",\\\"content\\\":\\\"let (x, y): u32 = x();\\\"}\"}"
          span:
            line_start: 1
            line_stop: 1
            col_start: 6
            col_stop: 7
            path: definition.leo
            content: "let (x, y): u32 = x();"
        - mutable: true
          identifier: "{\"name\":\"y\",\"span\":\"{\\\"line_start\\\":1,\\\"line_stop\\\":1,\\\"col_start\\\":9,\\\"col_stop\\\":10,\\\"path\\\":\\\"definition.leo\\\",\\\"content\\\":\\\"let (x, y): u32 = x();\\\"}\"}"
          span:
            line_start: 1
            line_stop: 1
            col_start: 9
            col_stop: 10
            path: definition.leo
            content: "let (x, y): u32 = x();"
      type_:
        IntegerType: U32
      value:
        Call:
          function:
            Identifier: "{\"name\":\"x\",\"span\":\"{\\\"line_start\\\":1,\\\"line_stop\\\":1,\\\"col_start\\\":19,\\\"col_stop\\\":20,\\\"path\\\":\\\"definition.leo\\\",\\\"content\\\":\\\"let (x, y): u32 = x();\\\"}\"}"
          arguments: []
          span:
            line_start: 1
            line_stop: 1
            col_start: 19
            col_stop: 22
            path: definition.leo
            content: "let (x, y): u32 = x();"
      span:
        line_start: 1
        line_stop: 1
        col_start: 1
        col_stop: 22
        path: definition.leo
        content: "let (x, y): u32 = x();"
  - Definition:
      declaration_type: Const
      variable_names:
        - mutable: false
          identifier: "{\"name\":\"x\",\"span\":\"{\\\"line_start\\\":1,\\\"line_stop\\\":1,\\\"col_start\\\":8,\\\"col_stop\\\":9,\\\"path\\\":\\\"definition.leo\\\",\\\"content\\\":\\\"const (x, y): u32 = expr;\\\"}\"}"
          span:
            line_start: 1
            line_stop: 1
            col_start: 8
            col_stop: 9
            path: definition.leo
            content: "const (x, y): u32 = expr;"
        - mutable: false
          identifier: "{\"name\":\"y\",\"span\":\"{\\\"line_start\\\":1,\\\"line_stop\\\":1,\\\"col_start\\\":11,\\\"col_stop\\\":12,\\\"path\\\":\\\"definition.leo\\\",\\\"content\\\":\\\"const (x, y): u32 = expr;\\\"}\"}"
          span:
            line_start: 1
            line_stop: 1
            col_start: 11
            col_stop: 12
            path: definition.leo
            content: "const (x, y): u32 = expr;"
      type_:
        IntegerType: U32
      value:
        Identifier: "{\"name\":\"expr\",\"span\":\"{\\\"line_start\\\":1,\\\"line_stop\\\":1,\\\"col_start\\\":21,\\\"col_stop\\\":25,\\\"path\\\":\\\"definition.leo\\\",\\\"content\\\":\\\"const (x, y): u32 = expr;\\\"}\"}"
      span:
        line_start: 1
        line_stop: 1
        col_start: 1
        col_stop: 25
        path: definition.leo
        content: "const (x, y): u32 = expr;"
  - Definition:
      declaration_type: Const
      variable_names:
        - mutable: false
          identifier: "{\"name\":\"x\",\"span\":\"{\\\"line_start\\\":1,\\\"line_stop\\\":1,\\\"col_start\\\":8,\\\"col_stop\\\":9,\\\"path\\\":\\\"definition.leo\\\",\\\"content\\\":\\\"const (x, y): u32 = ();\\\"}\"}"
          span:
            line_start: 1
            line_stop: 1
            col_start: 8
            col_stop: 9
            path: definition.leo
            content: "const (x, y): u32 = ();"
        - mutable: false
          identifier: "{\"name\":\"y\",\"span\":\"{\\\"line_start\\\":1,\\\"line_stop\\\":1,\\\"col_start\\\":11,\\\"col_stop\\\":12,\\\"path\\\":\\\"definition.leo\\\",\\\"content\\\":\\\"const (x, y): u32 = ();\\\"}\"}"
          span:
            line_start: 1
            line_stop: 1
            col_start: 11
            col_stop: 12
            path: definition.leo
            content: "const (x, y): u32 = ();"
      type_:
        IntegerType: U32
      value:
        TupleInit:
          elements: []
          span:
            line_start: 1
            line_stop: 1
            col_start: 21
            col_stop: 23
            path: definition.leo
            content: "const (x, y): u32 = ();"
      span:
        line_start: 1
        line_stop: 1
        col_start: 1
        col_stop: 23
        path: definition.leo
        content: "const (x, y): u32 = ();"
  - Definition:
      declaration_type: Const
      variable_names:
        - mutable: false
          identifier: "{\"name\":\"x\",\"span\":\"{\\\"line_start\\\":1,\\\"line_stop\\\":1,\\\"col_start\\\":8,\\\"col_stop\\\":9,\\\"path\\\":\\\"definition.leo\\\",\\\"content\\\":\\\"const (x, y): u32 = x+y;\\\"}\"}"
          span:
            line_start: 1
            line_stop: 1
            col_start: 8
            col_stop: 9
            path: definition.leo
            content: "const (x, y): u32 = x+y;"
        - mutable: false
          identifier: "{\"name\":\"y\",\"span\":\"{\\\"line_start\\\":1,\\\"line_stop\\\":1,\\\"col_start\\\":11,\\\"col_stop\\\":12,\\\"path\\\":\\\"definition.leo\\\",\\\"content\\\":\\\"const (x, y): u32 = x+y;\\\"}\"}"
          span:
            line_start: 1
            line_stop: 1
            col_start: 11
            col_stop: 12
            path: definition.leo
            content: "const (x, y): u32 = x+y;"
      type_:
        IntegerType: U32
      value:
        Binary:
          left:
            Identifier: "{\"name\":\"x\",\"span\":\"{\\\"line_start\\\":1,\\\"line_stop\\\":1,\\\"col_start\\\":21,\\\"col_stop\\\":22,\\\"path\\\":\\\"definition.leo\\\",\\\"content\\\":\\\"const (x, y): u32 = x+y;\\\"}\"}"
          right:
            Identifier: "{\"name\":\"y\",\"span\":\"{\\\"line_start\\\":1,\\\"line_stop\\\":1,\\\"col_start\\\":23,\\\"col_stop\\\":24,\\\"path\\\":\\\"definition.leo\\\",\\\"content\\\":\\\"const (x, y): u32 = x+y;\\\"}\"}"
          op: Add
          span:
            line_start: 1
            line_stop: 1
            col_start: 21
            col_stop: 24
            path: definition.leo
            content: "const (x, y): u32 = x+y;"
      span:
        line_start: 1
        line_stop: 1
        col_start: 1
        col_stop: 24
        path: definition.leo
        content: "const (x, y): u32 = x+y;"
  - Definition:
      declaration_type: Const
      variable_names:
        - mutable: false
          identifier: "{\"name\":\"x\",\"span\":\"{\\\"line_start\\\":1,\\\"line_stop\\\":1,\\\"col_start\\\":8,\\\"col_stop\\\":9,\\\"path\\\":\\\"definition.leo\\\",\\\"content\\\":\\\"const (x, y): u32 = (x,y);\\\"}\"}"
          span:
            line_start: 1
            line_stop: 1
            col_start: 8
            col_stop: 9
            path: definition.leo
            content: "const (x, y): u32 = (x,y);"
        - mutable: false
          identifier: "{\"name\":\"y\",\"span\":\"{\\\"line_start\\\":1,\\\"line_stop\\\":1,\\\"col_start\\\":11,\\\"col_stop\\\":12,\\\"path\\\":\\\"definition.leo\\\",\\\"content\\\":\\\"const (x, y): u32 = (x,y);\\\"}\"}"
          span:
            line_start: 1
            line_stop: 1
            col_start: 11
            col_stop: 12
            path: definition.leo
            content: "const (x, y): u32 = (x,y);"
      type_:
        IntegerType: U32
      value:
        TupleInit:
          elements:
            - Identifier: "{\"name\":\"x\",\"span\":\"{\\\"line_start\\\":1,\\\"line_stop\\\":1,\\\"col_start\\\":22,\\\"col_stop\\\":23,\\\"path\\\":\\\"definition.leo\\\",\\\"content\\\":\\\"const (x, y): u32 = (x,y);\\\"}\"}"
            - Identifier: "{\"name\":\"y\",\"span\":\"{\\\"line_start\\\":1,\\\"line_stop\\\":1,\\\"col_start\\\":24,\\\"col_stop\\\":25,\\\"path\\\":\\\"definition.leo\\\",\\\"content\\\":\\\"const (x, y): u32 = (x,y);\\\"}\"}"
          span:
            line_start: 1
            line_stop: 1
            col_start: 21
            col_stop: 26
            path: definition.leo
            content: "const (x, y): u32 = (x,y);"
      span:
        line_start: 1
        line_stop: 1
        col_start: 1
        col_stop: 26
        path: definition.leo
        content: "const (x, y): u32 = (x,y);"
  - Definition:
      declaration_type: Const
      variable_names:
        - mutable: false
          identifier: "{\"name\":\"x\",\"span\":\"{\\\"line_start\\\":1,\\\"line_stop\\\":1,\\\"col_start\\\":8,\\\"col_stop\\\":9,\\\"path\\\":\\\"definition.leo\\\",\\\"content\\\":\\\"const (x, y): u32 = x();\\\"}\"}"
          span:
            line_start: 1
            line_stop: 1
            col_start: 8
            col_stop: 9
            path: definition.leo
            content: "const (x, y): u32 = x();"
        - mutable: false
          identifier: "{\"name\":\"y\",\"span\":\"{\\\"line_start\\\":1,\\\"line_stop\\\":1,\\\"col_start\\\":11,\\\"col_stop\\\":12,\\\"path\\\":\\\"definition.leo\\\",\\\"content\\\":\\\"const (x, y): u32 = x();\\\"}\"}"
          span:
            line_start: 1
            line_stop: 1
            col_start: 11
            col_stop: 12
            path: definition.leo
            content: "const (x, y): u32 = x();"
      type_:
        IntegerType: U32
      value:
        Call:
          function:
            Identifier: "{\"name\":\"x\",\"span\":\"{\\\"line_start\\\":1,\\\"line_stop\\\":1,\\\"col_start\\\":21,\\\"col_stop\\\":22,\\\"path\\\":\\\"definition.leo\\\",\\\"content\\\":\\\"const (x, y): u32 = x();\\\"}\"}"
          arguments: []
          span:
            line_start: 1
            line_stop: 1
            col_start: 21
            col_stop: 24
            path: definition.leo
            content: "const (x, y): u32 = x();"
      span:
        line_start: 1
        line_stop: 1
        col_start: 1
        col_stop: 24
        path: definition.leo
        content: "const (x, y): u32 = x();"
  - Definition:
      declaration_type: Let
      variable_names:
        - mutable: true
          identifier: "{\"name\":\"x\",\"span\":\"{\\\"line_start\\\":1,\\\"line_stop\\\":1,\\\"col_start\\\":6,\\\"col_stop\\\":7,\\\"path\\\":\\\"definition.leo\\\",\\\"content\\\":\\\"let (x,y,) = ();\\\"}\"}"
          span:
            line_start: 1
            line_stop: 1
            col_start: 6
            col_stop: 7
            path: definition.leo
            content: "let (x,y,) = ();"
        - mutable: true
          identifier: "{\"name\":\"y\",\"span\":\"{\\\"line_start\\\":1,\\\"line_stop\\\":1,\\\"col_start\\\":8,\\\"col_stop\\\":9,\\\"path\\\":\\\"definition.leo\\\",\\\"content\\\":\\\"let (x,y,) = ();\\\"}\"}"
          span:
            line_start: 1
            line_stop: 1
            col_start: 8
            col_stop: 9
            path: definition.leo
            content: "let (x,y,) = ();"
      type_: ~
      value:
        TupleInit:
          elements: []
          span:
            line_start: 1
            line_stop: 1
            col_start: 14
            col_stop: 16
            path: definition.leo
            content: "let (x,y,) = ();"
      span:
        line_start: 1
        line_stop: 1
        col_start: 1
        col_stop: 16
        path: definition.leo
        content: "let (x,y,) = ();"
  - Definition:
      declaration_type: Let
      variable_names:
        - mutable: true
          identifier: "{\"name\":\"x\",\"span\":\"{\\\"line_start\\\":1,\\\"line_stop\\\":1,\\\"col_start\\\":6,\\\"col_stop\\\":7,\\\"path\\\":\\\"definition.leo\\\",\\\"content\\\":\\\"let (x,) = ();\\\"}\"}"
          span:
            line_start: 1
            line_stop: 1
            col_start: 6
            col_stop: 7
            path: definition.leo
            content: "let (x,) = ();"
      type_: ~
      value:
        TupleInit:
          elements: []
          span:
            line_start: 1
            line_stop: 1
            col_start: 12
            col_stop: 14
            path: definition.leo
            content: "let (x,) = ();"
      span:
        line_start: 1
        line_stop: 1
        col_start: 1
        col_stop: 14
        path: definition.leo
        content: "let (x,) = ();"
