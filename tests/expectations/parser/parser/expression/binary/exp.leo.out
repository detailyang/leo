---
namespace: ParseExpression
expectation: Pass
outputs:
  - Binary:
      left:
        Value:
          Implicit:
            - "1"
            - line_start: 1
              line_stop: 1
              col_start: 1
              col_stop: 2
              path: test
              content: 1 ** 1
      right:
        Value:
          Implicit:
            - "1"
            - line_start: 1
              line_stop: 1
              col_start: 6
              col_stop: 7
              path: test
              content: 1 ** 1
      op: Pow
      span:
        line_start: 1
        line_stop: 1
        col_start: 1
        col_stop: 7
        path: test
        content: 1 ** 1
  - Binary:
      left:
        Value:
          Implicit:
            - "2"
            - line_start: 1
              line_stop: 1
              col_start: 1
              col_stop: 2
              path: test
              content: 2**3
      right:
        Value:
          Implicit:
            - "3"
            - line_start: 1
              line_stop: 1
              col_start: 4
              col_stop: 5
              path: test
              content: 2**3
      op: Pow
      span:
        line_start: 1
        line_stop: 1
        col_start: 1
        col_stop: 5
        path: test
        content: 2**3
  - Binary:
      left:
        Value:
          Implicit:
            - "1"
            - line_start: 1
              line_stop: 1
              col_start: 1
              col_stop: 2
              path: test
              content: 1 ** 2 ** 3
      right:
        Binary:
          left:
            Value:
              Implicit:
                - "2"
                - line_start: 1
                  line_stop: 1
                  col_start: 6
                  col_stop: 7
                  path: test
                  content: 1 ** 2 ** 3
          right:
            Value:
              Implicit:
                - "3"
                - line_start: 1
                  line_stop: 1
                  col_start: 11
                  col_stop: 12
                  path: test
                  content: 1 ** 2 ** 3
          op: Pow
          span:
            line_start: 1
            line_stop: 1
            col_start: 6
            col_stop: 12
            path: test
            content: 1 ** 2 ** 3
      op: Pow
      span:
        line_start: 1
        line_stop: 1
        col_start: 1
        col_stop: 12
        path: test
        content: 1 ** 2 ** 3
  - Binary:
      left:
        Cast:
          inner:
            Value:
              Implicit:
                - "1"
                - line_start: 1
                  line_stop: 1
                  col_start: 1
                  col_stop: 2
                  path: test
                  content: 1 as i8 ** 3 as i8
          target_type:
            IntegerType: I8
          span:
            line_start: 1
            line_stop: 1
            col_start: 1
            col_stop: 8
            path: test
            content: 1 as i8 ** 3 as i8
      right:
        Cast:
          inner:
            Value:
              Implicit:
                - "3"
                - line_start: 1
                  line_stop: 1
                  col_start: 12
                  col_stop: 13
                  path: test
                  content: 1 as i8 ** 3 as i8
          target_type:
            IntegerType: I8
          span:
            line_start: 1
            line_stop: 1
            col_start: 12
            col_stop: 19
            path: test
            content: 1 as i8 ** 3 as i8
      op: Pow
      span:
        line_start: 1
        line_stop: 1
        col_start: 1
        col_stop: 19
        path: test
        content: 1 as i8 ** 3 as i8
  - Binary:
      left:
        Cast:
          inner:
            Value:
              Implicit:
                - "1"
                - line_start: 1
                  line_stop: 1
                  col_start: 1
                  col_stop: 2
                  path: test
                  content: 1 as i8 ** 3 as i8 ** 5 as i8
          target_type:
            IntegerType: I8
          span:
            line_start: 1
            line_stop: 1
            col_start: 1
            col_stop: 8
            path: test
            content: 1 as i8 ** 3 as i8 ** 5 as i8
      right:
        Binary:
          left:
            Cast:
              inner:
                Value:
                  Implicit:
                    - "3"
                    - line_start: 1
                      line_stop: 1
                      col_start: 12
                      col_stop: 13
                      path: test
                      content: 1 as i8 ** 3 as i8 ** 5 as i8
              target_type:
                IntegerType: I8
              span:
                line_start: 1
                line_stop: 1
                col_start: 12
                col_stop: 19
                path: test
                content: 1 as i8 ** 3 as i8 ** 5 as i8
          right:
            Cast:
              inner:
                Value:
                  Implicit:
                    - "5"
                    - line_start: 1
                      line_stop: 1
                      col_start: 23
                      col_stop: 24
                      path: test
                      content: 1 as i8 ** 3 as i8 ** 5 as i8
              target_type:
                IntegerType: I8
              span:
                line_start: 1
                line_stop: 1
                col_start: 23
                col_stop: 30
                path: test
                content: 1 as i8 ** 3 as i8 ** 5 as i8
          op: Pow
          span:
            line_start: 1
            line_stop: 1
            col_start: 12
            col_stop: 30
            path: test
            content: 1 as i8 ** 3 as i8 ** 5 as i8
      op: Pow
      span:
        line_start: 1
        line_stop: 1
        col_start: 1
        col_stop: 30
        path: test
        content: 1 as i8 ** 3 as i8 ** 5 as i8
